openapi: 3.0.3
info:
  title: Spellbook API - OpenAPI 3.0
  version: 0.1.0
  description: |-
    This is a description

servers:
  - url: http://localhost:3000
tags:
  - name: Users
    description: Register as a user
  - name: Spells
    description: Add spells to your spellbook and read them
  - name: Spell
    description: Read, update or erase spells from your spellbook or publish them
  - name: Public
    description: Look for spells other users posted and copy them to your spellbook
paths:
  /users:
    post:
      tags:
        - Users
      summary: Create a user
      description: Create a user
      operationId: createUser
      requestBody:
        description: Create a user
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: Elminster
        required: true
      responses:
        "200":
          description: User successfully created
          content:
            text/plain; charset=utf-8:
              schema:
                type: string
                example: "Welcome Elminster! Your api key is: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx Don't lose it!"
        "400":
          $ref: "#/components/schemas/400Response"
        "422":
          description: Username already taken or no username given
          content:
            text/plain; charset=utf-8:
              schema:
                type: string
                example: 'The username "<username>" is already taken'
        "500":
          description: Database error
  /spells:
    post:
      tags:
        - Spells
      summary: Add a new spell to your spellbook
      description: Add a new spell to your spellbook
      operationId: createSpell
      security:
        - api_key: []
      requestBody:
        description: Add a new spell to your spellbook
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Fireball
                level:
                  type: string
                  example: Level 3
                  pattern: "^Level [1-9]$|^Cantrip$"
                casting_time:
                  type: string
                  example: Action
                magic_school:
                  $ref: "#/components/schemas/MagicSchool"
                concentration:
                  type: bool
                  example: false
                range:
                  type: string
                  example: 150 feet
                duration:
                  type: string
                  example: Instantaneous
                description:
                  type: string
                  example:
                    "A bright streak flashes from you to a point you choose within range and then blossoms with a low roar into a fiery explosion. Each creature in a 20-foot-radius Sphere centered on that point makes a Dexterity saving throw, taking 8d6 Fire damage on a failed save or half as much damage on a successful one.
                    Flammable objects in the area that aren't being worn or carried start burning.
                    Using a Higher-Level Spell Slot. The damage increases by 1d6 for each spell slot level above 3."
        required: true
      responses:
        "200":
          description: Spell successfully added
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: Fireball
                  level:
                    type: string
                    pattern: "^Level [1-9]$|^Cantrip$"
                    example: Level 3
                  casting_time:
                    type: string
                    example: Action
                  magic_school:
                    $ref: "#/components/schemas/MagicSchool"
                  concentration:
                    type: bool
                    example: false
                  range:
                    type: string
                    example: 150 feet
                  duration:
                    type: string
                    example: Instantaneous
                  published:
                    type: bool
                    example: false
        "400":
          $ref: "#/components/schemas/400Response"
        "401":
          $ref: "#/components/schemas/UnauthorizedResponse"
        "422":
          description: Duplicate spell or missing/invalid fields
          content:
            text/plain; charset=utf-8:
              schema:
                type: string
                example: 'You already have a spell with the name "Fireball" in your spellbook.'
        "500":
          description: Database error
    get:
      tags:
        - Spells
      summary: Get all the spells from your spellbook
      description: Get all the spells from your spellbook
      operationId: getSpells
      security:
        - api_key: []
      responses:
        "200":
          description: Spells fetched successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetSpellsResponse"
        "401":
          $ref: "#/components/schemas/UnauthorizedResponse"
        "500":
          description: Database error
  /spells/query:
    post:
      tags:
        - Spells
      summary: Search for spells in your spellbook
      description: Search for spells in your spellbook
      operationId: querySpells
      security:
        - api_key: []
      requestBody:
        description: Query data. All fields are optional.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QuerySpellsRequest"
        required: true
      responses:
        "200":
          description: Spells successfully queried.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetSpellsResponse"
        "401":
          $ref: "#/components/schemas/UnauthorizedResponse"
        "500":
          description: Database error
  /spell/{spell_id}:
    put:
      tags:
        - Spell
      summary: Update a spell in your spellbook
      description: Update a spell in your spellbook
      operationId: updateSpell
      security:
        - api_key: []
      parameters:
        - name: spell_id
          in: path
          description: ID of the spell to update
          required: true
          schema:
            type: string
      requestBody:
        description: Updated spell data. All fields are optional.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateSpellRequest"
        required: true
      responses:
        "200":
          description: Spell successfully updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SpellResponse"
        "400":
          $ref: "#/components/schemas/400Response"
        "401":
          $ref: "#/components/schemas/UnauthorizedResponse"
        "500":
          description: Database error
    get:
      tags:
        - Spell
      summary: Get a spell from your spellbook
      description: Get a spell from your spellbook
      operationId: getSpell
      security:
        - api_key: []
      parameters:
        - name: spell_id
          in: path
          description: ID of the spell to fetch
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Spell fetched successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SpellResponse"
        "400":
          $ref: "#/components/schemas/400Response"
        "401":
          $ref: "#/components/schemas/UnauthorizedResponse"
        "404":
          description: Spell not found
          content:
            text/plain; charset=utf-8:
              schema:
                type: string
                example: You don't have a spell with the name "Invisibility" in your spellbook.
        "422":
          description: Missing name field
          content:
            text/plain; charset=utf-8:
              schema:
                type: string
                example: "Failed to deserialize the JSON body into the target type: missing field `name` at line 2 column 1"
        "500":
          description: Database error
    delete:
      tags:
        - Spell
      summary: Erase a spell from your spellbook
      description: Erase a spell from your spellbook
      operationId: deleteSpell
      security:
        - api_key: []
      parameters:
        - name: spell_id
          in: path
          description: ID of the spell to erase from your spellbook.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Spell erased successfully
          content:
            text/plain; charset=utf-8:
              schema:
                type: string
                example: The spell "Invisibility" was successfully erased from your spellbook.
        "400":
          $ref: "#/components/schemas/400Response"
        "401":
          $ref: "#/components/schemas/UnauthorizedResponse"
        "404":
          description: Spell not found
          content:
            text/plain; charset=utf-8:
              schema:
                type: string
                example: You don't have a spell with the name "Invisibility" in your spellbook.
        "422":
          description: Missing name field
          content:
            text/plain; charset=utf-8:
              schema:
                type: string
                example: "Failed to deserialize the JSON body into the target type: missing field `name` at line 2 column 1"
        "500":
          description: Database error
  /spell/publish/{spell_id}:
    patch:
      tags:
        - Spell
      summary: Publish a spell from your spellbook
      description: Publish a spell from your spellbook
      security:
        - api_key: []
      parameters:
        - name: spell_id
          in: path
          description: ID of the spell to publish
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Spell published successfully
          content:
            text/plain; charset=utf-8:
              schema:
                type: string
                example: Your spell "Fly" was successfully published.
        "400":
          $ref: "#/components/schemas/400Response"
        "401":
          $ref: "#/components/schemas/UnauthorizedResponse"
        "404":
          $ref: "#/components/schemas/404Response"
        "422":
          description: Spell already published
          content:
            text/plain; charset=utf-8:
              schema:
                type: string
                example: 'Your spell "Fly" is already published.'
        "500":
          description: Database error
  /spell/unpublish/{spell_id}:
    patch:
      tags:
        - Spell
      summary: Unpublish one of your published spells
      description: Unpublish one of your published spells
      operationId: unpublishSpell
      security:
        - api_key: []
      parameters:
        - name: spell_id
          in: path
          description: ID of the spell to unpublish
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Spell unpublished successfully
          content:
            text/plain; charset=utf-8:
              schema:
                type: string
                example: Your spell "Fly" was successfully unpublished.
        "400":
          $ref: "#/components/schemas/400Response"
        "401":
          $ref: "#/components/schemas/UnauthorizedResponse"
        "404":
          $ref: "#/components/schemas/404Response"
        "422":
          description: Spell not published
          content:
            text/plain; charset=utf-8:
              schema:
                type: string
                example: 'Your spell "Fly" is not published.'
        "500":
          description: Database error
  /public/spells/query:
    post:
      tags:
        - Public
      summary: Search for spells others have published. 
      description: Search for spells others have published. Will not show your own published spells.
      operationId: queryPublicSpells
      security:
        - api_key: []
      requestBody:
        description: Query data. All fields are optional.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryPublicSpellsRequest"
        required: true
      responses:
        "200":
          description: Spells successfully queried.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPublicSpellsResponse"
        "401":
          $ref: "#/components/schemas/UnauthorizedResponse"
        "500":
          description: Database error
  /public/spell/copy/{spell_id}:
    patch:
      tags:
        - Public
      summary: Copy a published spell from some else's spellbook. 
      description: Copy a published spell from some else's spellbook.
      operationId: copyPublicSpell
      security:
        - api_key: []
      parameters:
        - name: spell_id
          in: path
          description: ID of the spell to copy
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Spell successfully copied.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetSpellResponse"
        "401":
          $ref: "#/components/schemas/UnauthorizedResponse"
        "404":
          $ref: "#/components/schemas/NotFoundResponse"
        "500":
          description: Database error
components:
  schemas:
    GetSpellsResponse:
      type: array
      items:
        $ref: "#/components/schemas/SpellResponse"
    GetPublicSpellsResponse:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
            example: "Heroism"
          level:
            type: string
            example: "Level 1"
            pattern: "^Level [1-9]$|^Cantrip$"
          casting_time:
            type: string
            example: "Action"
          magic_school:
            $ref: "#/components/schemas/MagicSchool"
          concentration:
            type: bool
            example: false
          range:
            type: string
            example: "Touch"
          duration:
            type: string
            example: "1 minute"
          username:
            type: string
            example: "Xanathar"
    QuerySpellsRequest:
      type: object
      properties:
        name:
          type: string
          example: Invis
        level:
          type: string
          example: "2"
        casting_time:
          type: string
          example: ction
        magic_school:
          type: string
          example: Ill
        concentration:
          type: bool
          example: true
        range:
          type: string
          example: Touch
        duration:
          type: string
          example: hour
    QueryPublicSpellsRequest:
      type: object
      properties:
        name:
          type: string
          example: "Hero"
        level:
          type: string
          example: "1"
        casting_time:
          type: string
          example: "ction"
        magic_school:
          type: string
          example: "Enchant"
        concentration:
          type: bool
          example: true
        range:
          type: string
          example: "Touch"
        duration:
          type: string
          example: "hour"
        username:
          type: string
          example: "Xan"
    GetSpellRequest:
      type: object
      properties:
        name:
          type: string
          example: Invisibility
    UpdateSpellRequest:
      type: object
      properties:
        name:
          type: string
          example: Mage Hand
        level:
          type: string
          example: Cantrip
          pattern: "^Level [1-9]$|^Cantrip$"
        casting_time:
          type: string
          example: Action
        magic_school:
          $ref: "#/components/schemas/MagicSchool"
        concentration:
          type: bool
          example: false
        range:
          type: string
          example: 30 feet
        duration:
          type: string
          example: 1 minute
        description:
          type: string
          example: "A spectral, floating hand appears at a point you choose within range. The hand lasts for the duration. The hand vanishes if it is ever more than 30 feet away from you or if you cast this spell again."
    SpellResponse:
      type: object
      properties:
        name:
          type: string
          example: Fireball
        level:
          type: string
          pattern: "^Level [1-9]$|^Cantrip$"
          example: Level 3
        casting_time:
          type: string
          example: Action
        magic_school:
          $ref: "#/components/schemas/MagicSchool"
        concentration:
          type: bool
          example: false
        range:
          type: string
          example: 150 feet
        duration:
          type: string
          example: Instantaneous
        published:
          type: bool
          example: false
    400Response:
      description: Missing or invalid JSON body
      content:
        text/plain; charset=utf-8:
          schema:
            type: string
            example: "Failed to parse the request body as JSON: EOF while parsing a value at line 1 column 0"
    UnauthorizedResponse:
      description: Missing or invalid api key
      content:
        text/plain; charset=utf-8:
          schema:
            type: string
            example: Missing AUTHORIZATION header
    404Response:
      description: Spell not found
      content:
        text/plain; charset=utf-8:
          schema:
            type: string
            example: You don't have a spell with the name "Invisibility" in your spellbook.

    MagicSchool:
      type: string
      enum:
        - Abjuration
        - Conjuration
        - Divination
        - Enchantment
        - Evocation
        - Illusion
        - Necromancy
        - Transmutation
  securitySchemes:
    api_key:
      type: apiKey
      name: AUTHORIZATION
      in: header
